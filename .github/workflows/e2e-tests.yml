name: E2E Tests

on:
  pull_request:
    branches:
      - main
      - development
  push:
    branches:
      - main
      - development

jobs:
  e2e:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
          extensions: mbstring, pdo, pdo_pgsql

      - name: Install frontend dependencies
        run: npm ci

      - name: Install Playwright browsers
        run: npx playwright install --with-deps

      - name: Install API dependencies (for volume mount)
        working-directory: api
        run: composer install --no-interaction --prefer-dist

      - name: Start backend stack
        working-directory: infra
        run: docker compose up -d

      - name: Wait for containers to be ready
        working-directory: infra
        run: |
          echo "Waiting for containers to start..."
          sleep 5

          echo "Container status:"
          docker compose ps

          echo "API container logs:"
          docker compose logs api

          echo "PostgreSQL container logs:"
          docker compose logs postgres

      - name: Wait for API healthcheck
        run: |
          echo "Waiting for API health endpoint..."
          for i in {1..30}; do
            if curl -sSf http://localhost:8080/health; then
              echo "API is healthy!"
              exit 0
            fi
            echo "Attempt $i/30 failed, waiting 2 seconds..."
            sleep 2
          done

          echo "API failed to become healthy. Checking logs..."
          cd ../infra
          docker compose logs api
          docker compose logs postgres
          exit 1

      - name: Run Playwright tests
        run: npm run test:e2e

      - name: Upload Playwright report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: frontend/playwright-report
          retention-days: 7

      - name: Upload JUnit report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-junit
          path: frontend/test-results/junit.xml
          retention-days: 7

      - name: Shutdown backend stack
        if: always()
        working-directory: infra
        run: docker compose down
