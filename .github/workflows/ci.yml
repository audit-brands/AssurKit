name: CI

on:
  pull_request:
    branches:
      - main
      - development
  push:
    branches:
      - main
      - development

jobs:
  changes:
    name: Detect Changes
    runs-on: ubuntu-latest
    outputs:
      frontend: ${{ steps.changes.outputs.frontend }}
      backend: ${{ steps.changes.outputs.backend }}
    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            frontend:
              - 'frontend/**'
            backend:
              - 'api/**'
              
  frontend:
    name: Frontend CI
    needs: changes
    if: ${{ needs.changes.outputs.frontend == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json
      - name: Install
        working-directory: frontend
        run: npm ci
      - name: Lint
        working-directory: frontend
        run: npm run lint
      - name: Type Check
        working-directory: frontend
        run: npm run typecheck
      - name: Test
        working-directory: frontend
        run: npm run test:coverage
        env:
          NODE_OPTIONS: --max-old-space-size=4096
        
  backend:
    name: Backend CI
    needs: changes
    if: ${{ needs.changes.outputs.backend == 'true' }}
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:16-alpine
        env:
          POSTGRES_USER: assurkit
          POSTGRES_PASSWORD: assurkit_test
          POSTGRES_DB: assurkit_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
      - uses: actions/checkout@v4
      - uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
          coverage: none
          extensions: mbstring, pdo, pdo_pgsql, json
      - name: Install
        working-directory: api
        run: composer install --prefer-dist --no-progress

      - name: Wait for PostgreSQL to be ready
        run: |
          for i in {1..30}; do
            PGPASSWORD=assurkit_test psql -h localhost -U assurkit -d assurkit_test -c "SELECT 1" > /dev/null 2>&1 && break
            echo "Waiting for PostgreSQL to be ready... ($i/30)"
            sleep 2
          done
          PGPASSWORD=assurkit_test psql -h localhost -U assurkit -d assurkit_test -c "SELECT version();"

      - name: Run database migrations
        working-directory: api
        env:
          DB_HOST: localhost
          DB_PORT: 5432
          DB_DATABASE: assurkit_test
          DB_USERNAME: assurkit
          DB_PASSWORD: assurkit_test
        run: php migrate.php migrate

      - name: Lint
        working-directory: api
        run: vendor/bin/php-cs-fixer fix --dry-run --diff
      - name: Static Analysis
        working-directory: api
        run: vendor/bin/psalm --output-format=github
      - name: Test
        working-directory: api
        env:
          DB_HOST: localhost
          DB_PORT: 5432
          DB_DATABASE: assurkit_test
          DB_USERNAME: assurkit
          DB_PASSWORD: assurkit_test
        run: vendor/bin/pest --ci
        
  all-checks:
    name: All Checks Passed
    needs: [changes, frontend, backend]
    if: always()
    runs-on: ubuntu-latest
    steps:
      - name: Check Results
        run: |
          if [[ "${{ needs.frontend.result }}" == "failure" || "${{ needs.backend.result }}" == "failure" ]]; then
            echo "One or more checks failed"
            exit 1
          fi
          echo "All checks passed successfully"